#!/usr/bin/env node

// 加载依赖
var app = require('../app');
var debug = require('debug')('myblog:server');
var http = require('http');

// 设置端口号
var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

// 创建http server服务
var server = http.createServer(app);

// 启动http server监听
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
// 可以在这里给个提示，表示启动成功
console.log("Server running at http://127.0.0.1:3000");

//到这里就可以了，下面的可以忽略
// 端口标准化处理，上面第9行用到
function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}

// 下面两个用来处理http server的监听，当发生错误或请求正常时分别执行对应的方法
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
